<!DOCTYPE html>
<html>
<head>
    <title>DASAP</title>
    <style>
        body {
            display: flex;            
            background-color: black;
            flex-direction: column;
            margin: 0 auto;
            font-family: Arial;
            max-width: 1200px;
        }

        .bold-16 {
            font-weight: bold;
            font-size: 16px;
            font-family: Arial;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        td {
            text-align: center;
            width: 33.33%;
            padding: 10px;
        }

        td div {
            display: flex;
            align-items: baseline;
            justify-content: center;
        }

        td div form {
            margin-right: 5px;
        }

        td div div {
            font-size: 18px;
            font-weight: bold;
        }

        h1 {
            color: #F0C30E;
            font-family: Arial;
            font-size: 64px;
        }
        
        h2 {
            color: blueviolet;
            font-family: Arial;
            font-size: 25px;
        }

        .model-header {
            color: #D281E7;
            font-size: 25px;
            text-align: center;
            font-weight: bold;
            line-height: 1.2em;
            margin-bottom: 20px;
        }

        .model-header span {
            font-weight: bold;
            display: block;
        }

        .subheading {
            color:#3AD3B2;
            font-weight: bold;
            margin-bottom: 10px;
            text-align: center;
        }

        p {
            color: blue;
            font-family: Arial;
            font-size: 24px;
        }

        button {
            outline: 0;
            font-size: 0.75em;
            font-weight: 700;
            background: #FFD1C7;
            border: 2px solid #FA8072;
            padding: 0.3em 0.8em;
            transition: all .3s ease-out;
            box-shadow: inset 0 -1px 0 0 rgba(0,0,0,0.15),
                        1px 1px 0 0 #FEC1B4,
                        2px 2px 0 0 #FEC1B4,
                        3px 3px 0 0 #FA8072;
        }

        button:hover {
            color: #444;
        }

        button:active {
            color: #921B02;
            box-shadow: inset 0 -4px 0 0 rgba(0,0,0,.1),
                        1px 1px 0 0 #FF7F50,
                        2px 2px 0 0 #FF7F50,
                        3px 3px 0 0 #FF7F50,
                        4px 4px 0 0 #FF7F50,
                        5px 5px 0 0 #FF7F50;
        }

        input[name="sensor"], input[value="date"], input[type="text"] {
            color: black; 
            border: 2px solid #8b0000;
            padding: 2.2px; 
            font-size: 16px;
            text-align: center;
            font-weight: bold;
        }

        input[type="text"]:disabled {
            background-color: white;
            color: black;
        }

        .column {
            flex: 1;
            padding: 10px;
            box-sizing: border-box;
        }

        .column-inner {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

    </style>
</head>

<body>

    <center><h1>DASAP - DISASTER CLASSIFIER</h1></center>
    
    <center>
        <table>
            <tr>
                <td>
                    <span class="bold-16" style="color: #3AD3B2;">Enter Text: <input type="text" id="text_in" value="" size=50/>
                    <button onclick="classify()">START</button></span>
                </td>
            </tr>
        </table>
        <br><br>
        <div style="display: flex; flex-wrap: wrap;">
            <div class="column">
                <div class="column-inner">
                    <div class="model-header"><span>MODEL</span>CHATGPT3.5 BASIC</div>
                    <span class="bold-16 subheading">Disaster Type:</span>
                    <input type="text" id="text_class_basic" value="" size=35 disabled style="margin-bottom: 20px;"/>
                    <span class="bold-16 subheading">Requirement Type:</span>
                    <input type="text" id="text_req_basic" value="" size=35 disabled/>
                </div>
            </div>
            
            <div class="column">
                <div class="column-inner">
                    <div class="model-header"><span>MODEL</span>CHATGPT3.5 FINE TUNED</div>
                    <span class="bold-16 subheading">Disaster Type:</span>
                    <input type="text" id="text_class_fine" value="" size=35 disabled style="margin-bottom: 20px;"/>
                    <span class="bold-16 subheading">Requirement Type:</span>
                    <input type="text" id="text_req_fine" value="" size=35 disabled/>
                </div>
            </div>
    
            <div class="column">
                <div class="column-inner">
                    <div class="model-header"><span>MODEL</span>CHATGPT4 BASIC</div>
                    <span class="bold-16 subheading">Disaster Type:</span>
                    <input type="text" id="text_class_chatgpt4_basic" value="" size=35 disabled style="margin-bottom: 20px;"/>
                    <span class="bold-16 subheading">Requirement Type:</span>
                    <input type="text" id="text_req_chatgpt4_basic" value="" size=35 disabled/>
                </div>
            </div>
        </div>
    
        <div style="display: flex; flex-wrap: wrap; margin-top: 20px;">
            <div class="column">
                <div class="column-inner">
                    <div class="model-header"><span>MODEL</span>GEMINI BASIC</div>
                    <span class="bold-16 subheading">Disaster Type:</span>
                    <input type="text" id="text_class_gemini" value="" size=35 disabled style="margin-bottom: 20px;"/>
                    <span class="bold-16 subheading">Requirement Type:</span>
                    <input type="text" id="text_req_gemini" value="" size=35 disabled/>
                </div>
            </div>
    
            <div class="column">
                <div class="column-inner">
                    <div class="model-header"><span>MODEL</span>GEMINI FINE TUNED</div>
                    <span class="bold-16 subheading">Disaster Type:</span>
                    <input type="text" id="text_class_gemini_fine" value="" size=35 disabled style="margin-bottom: 20px;"/>
                    <span class="bold-16 subheading">Requirement Type:</span>
                    <input type="text" id="text_req_gemini_fine" value="" size=35 disabled/>
                </div>
            </div>
        </div>
    </center>
    <br><br>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        
	function callForModel(i) {
		var xhr = new XMLHttpRequest();
		xhr.open("POST", "setText.php?model=" + i + "&text=" + encodeURIComponent(inText), false);
		xhr.send();
		
		//alert("xhr.status: " + xhr.status);
		
		if (xhr.status != 200) alert("Network error:" + xhr.status);
		else {
			console.log("response: " + xhr.response);
			//alert(xhr.response);

			result_array = JSON.parse(xhr.response);

			classObj = result_array["Class"];
			console.log("classObj: " + classObj);

			if (i == 1) {
				class_array = JSON.parse(classObj);
				choices_array = class_array["choices"];
				message_array = choices_array[0]["message"];
				content = message_array["content"];
				console.log("content:" + content);
				document.getElementById("text_class_basic").value = content;					
			}
			else if (i == 2) {
				class_array = JSON.parse(classObj);
				choices_array = class_array["choices"];
				message_array = choices_array[0]["message"];
				content = message_array["content"];
				console.log("content:" + content);
				document.getElementById("text_class_fine").value = content;
			}
			else if (i == 3) {
				class_array = JSON.parse(classObj);
				choices_array = class_array["choices"];
				message_array = choices_array[0]["message"];
				content = message_array["content"];
				console.log("content:" + content);
				document.getElementById("text_class_chatgpt4_basic").value = content;					
			}
			else if (i == 4) {
				document.getElementById("text_class_gemini").value = classObj;
			}
			if (i == 5) {
				document.getElementById("text_class_gemini_fine").value = classObj;
			}						

			reqObj = result_array["Req"];
			console.log("reqObj: " + reqObj);
			
			if (i == 1) {								
				req_array = JSON.parse(reqObj);
				choices_array = req_array["choices"];
				message_array = choices_array[0]["message"];
				content = message_array["content"];
				console.log("content:" + content);
				document.getElementById("text_req_basic").value = content;
			}
			else if (i == 2) {
				req_array = JSON.parse(reqObj);
				choices_array = req_array["choices"];
				message_array = choices_array[0]["message"];
				content = message_array["content"];
				console.log("content:" + content);
				document.getElementById("text_req_fine").value = content;
			}
			else if (i == 3) {
				req_array = JSON.parse(reqObj);
				choices_array = req_array["choices"];
				message_array = choices_array[0]["message"];
				content = message_array["content"];
				console.log("content:" + content);
				document.getElementById("text_req_chatgpt4_basic").value = content;										
			}
			else if (i == 4) {				
				document.getElementById("text_req_gemini").value = reqObj;
			}
			if (i == 5) {				
				document.getElementById("text_req_gemini_fine").value = reqObj;
			}					
		}               	    
	} 

	function classify() {
            inText = document.getElementById("text_in").value;

            if (inText === "") {
                alert("Please enter text!");
            } else {
				for (i = 1; i < 6; i++) {
					//alert("calling model: " + i);
					callForModel(i);	
				}		
            }
        }
    </script>
</body>
</html>

